@page "/user/login"
@inject NavigationManager Nav
@inject ILogger<Login> logger
@attribute [Authorize]
@code {
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }
    protected override void OnInitialized()
    {
        var returnUrl = ReturnUrl ?? "/";
        var url = new Uri(returnUrl, UriKind.RelativeOrAbsolute);
        try
        {
            Nav.NavigateTo(url.IsAbsoluteUri ? "/" : returnUrl);
        } catch (NavigationException ne)
        {
            //TODO: Figure out why this throws, it doesn't stop the redirect back and the message just says "Navigation Exception"
            logger.LogDebug(ne, "redirect failed");
        }
    }
    public static string Url(NavigationManager nav)
        => $"user/login?returnUrl={Uri.EscapeDataString(nav.ToBaseRelativePath(nav.Uri))}";
}